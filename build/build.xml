<project name="BarcodeBooster" default="dist" basedir="..">
    <description>
        Build BarcodeBooster
    </description>
    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="lib"  location="lib"/>
    <property name="build" location="build"/>
    <property name="dist"  location="dist"/>
    <property name="config"  location="config"/>

    <path id="project.class.path">  
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
    </path>
	
	<path id="jars">
	    <fileset dir="${lib}" includes="**/*.jar"/>
	</path>

    <pathconvert property="mf.classpath" pathsep=" ">
        <path refid="project.class.path"/>
        <mapper>
            <chainedmapper>
                <flattenmapper/>
                <globmapper from="*.jar" to="lib/*.jar"/>
            </chainedmapper>
        </mapper>
    </pathconvert>
		
    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    	<mkdir dir="${build}/config"/>
    	<copy file="${config}/barcodes" todir="${build}/config"/>
    </target>

    <target name="compile" depends="init" description="compile the source " >
        <!-- Compile the java code from ${src} into ${build} -->
        <javac  srcdir="${src}" destdir="${build}" classpathref="jars">
            <!--classpath refid="project.class.path"/-->

        </javac>
    </target>

    <target name="dist" depends="compile"
        description="generate the distribution" >
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}/lib"/>

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/lib/bb.jar" basedir="${build}">
        	<zipgroupfileset dir="lib" includes="*.jar" excludes="junit*.jar,hamcrest*.jar"/>        	
            <manifest>
                <attribute name="Main-Class" value="edu.toronto.bb.core.Driver"/>
                <attribute name="Class-Path" value="${mf.classpath}"/>
            </manifest>
        </jar>
    </target>

    <target name="clean"
        description="clean up" >
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
</project>